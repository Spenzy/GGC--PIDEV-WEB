<?php //App%255CEntity%255CProduit%2524prix

return [PHP_INT_MAX, static function () { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Type')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\PositiveOrZero'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\PositiveOrZero')),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'prix',
            ],
            'type' => [
                'float',
                2 => 'float',
            ],
            'precision' => [
                10,
            ],
            'message' => [
                1 => 'Vous devez remplir ce champ',
                'Veuillez saisir un entier',
                'Le prix doit etre positif',
            ],
            'groups' => [
                1 => [
                    'Default',
                ],
                [
                    'Default',
                ],
                [
                    'Default',
                ],
            ],
            'value' => [
                3 => 0,
            ],
        ],
    ],
    [
        $o[0],
        $o[1],
        $o[2],
        $o[3],
    ],
    []
); }];
